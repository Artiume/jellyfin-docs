name: $(Date:yyyyMMdd)$(Rev:.r)

pr:
  autoCancel: true

trigger:
  batch: true

jobs:
  - job: docs_build
    displayName: "Main Build"
    pool:
      vmImage: windows-latest    
    steps:
    - checkout: self
      clean: true
      submodules: true
      persistCredentials: true

    - task: CmdLine@2
      displayName: "Update Submodules"
      inputs:
        script: 'git submodule update --recursive --remote'
        workingDirectory: '$(Build.SourcesDirectory)'

    - task: PowerShell@2
      displayName: "DocFX Build"
      inputs:
        targetType: 'filePath'
        filePath: '.ci/build-in-ci.ps1'
        workingDirectory: '$(Build.SourcesDirectory)'

    - task: ArchiveFiles@2
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI', 'BuildCompletion'))
      displayName: "Package Documentation"
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)/_site'
        includeRootFolder: false 
        archiveType: 'tar'
        tarCompression: 'gz'
        archiveFile: '$(Build.ArtifactStagingDirectory)/docs-$(Build.BuildId).tar.gz' 
        replaceExistingArchive: true 

    - task: GitHubRelease@0
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI', 'BuildCompletion'))
      displayName: "Create GitHub Release"
      inputs:
        gitHubConnection: Jellyfin Release Download
        repositoryName: '$(Build.Repository.Name)' 
        action: 'create' # Options: create, edit, delete
        target: '$(Build.SourceVersion)' # Required when action == Create || Action == Edit
        tagSource: 'manual' # Required when action == Create# Options: auto, manual
        tag: 'ci/$(Build.BuildId)' # Required when action == Edit || Action == Delete || TagSource == Manual
        title: 'CI Documentation Build $(Build.BuildId)' # Optional
        assets: '$(Build.ArtifactStagingDirectory)/docs-$(Build.BuildId).tar.gz' # Optional
        addChangeLog: true # Optional
        compareWith: 'lastFullRelease' # Required when addChangeLog == True. Options: lastFullRelease, lastRelease, lastReleaseByTag
